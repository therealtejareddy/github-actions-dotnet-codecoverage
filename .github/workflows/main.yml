name: Code coverage

on: [push, pull_request]

env:
  DOTNET_VERSION: '8.0.100'

jobs:
  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restore Dependencies
        run: dotnet restore

      - name: build
        run : dotnet build --no-restore /p:ContinuousIntegrationBuild=true

      - name: Test with Code coverage
        # run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage;Format=opencover" --results-directory ./coverage --logger "trx;LogFileName=test-results.trx"
        run: |
          dotnet test --no-build -p:CollectCoverage=true -p:CoverletOutput=coverage -p:CoverletOutputFormat=opencover --verbosity normal --logger "trx;LogFileName=test-results.trx"
          ls GACodeCoveragePoc.Tests

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     files: coverage/**/coverage.cobertura.xml
      #     flags: unittests
      #     name: codecov-umbrella
      
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()    # Explicitly run this step even if previous step failed
        with:
          name: .NET Tests            # Name of the check run which will be created
          path: "**/test-results.trx"
          reporter: dotnet-trx
          fail-on-error: true

      - name: Generate coverage summary report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          # filename: coverage/**/coverage.cobertura.xml     ugfdyuvu.Tests/coverage.opencover.xml
          filename: "./*.Tests/coverage.opencover.xml"
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
  
      - name: Add coverage report to PR comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2.2.0
        with:
          recreate: true
          path: code-coverage-results.md
  
      - name: Add coverage summary to job summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
